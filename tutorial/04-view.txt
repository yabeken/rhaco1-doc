* ビュー

次に、投稿記事（post）に対するビュー（View）を作成...しません。
今回は、作成しなくてもできる内容ですので、まずは汎用 View を用いて投稿記事の一覧を表示しましょう。
例えば、ユーザが www.example.com/post/index ( www.example.com/post と同じです。)をリクエストした場合、投稿記事の一覧が表示されると期待するでしょう。

これを実現するために、 /DocumentRoot/index.php を作成し、以下のように記述してください。

>|php|
<?php
include_once dirname(__FILE__)."__init__.php";
Rhaco::import("generic.Urls");
Rhaco::import("model.Post");

$db = new Dbutil(Post::connection());
$pattern = array(
	//投稿記事の一覧を表示
	"^posts(?:/index)?/?$"=>array("method"=>"read","args"=>array(new Post())),
);
$parser = Urls::parser($pattern,$db);
$parser->write();
?>
||<

ここでは、汎用 Views の read メソッドをビューとして指定し、その引数として Post インスタンスを渡しています。

このコードについて少し説明しましょう。

+ アプリケーションの初期設定ファイルを読み込みます。これは、setup.php で生成された設定を読み込んだり、独自の設定を追加したりできます。
+ URL ルーティングを行うためのライブラリと Post モデルを読み込みます。
+ データベース操作ライブラリをインスタンス化し、その接続先はPostモデルから取得します。
+ URLの正規表現をキーとしてルーティングの設定連想配列を作成します。
+ Urls::parser() にこれらを渡して、出力するテンプレートがセットされたテンプレートパーサーを取得します。
+ テンプレートを出力する。

あるURLに特定のビューを割り当てたいという誘惑には大いに負けてください。


* 参考

- http://book.cakephp.org/ja/view/335/Create-a-Posts-Controller