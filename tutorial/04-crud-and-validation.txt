* 記事の追加

データベースを読み、記事の一覧を表示・検索できるようになりました。今度は、新しい投稿ができるようにしてみましょう。

今回も汎用 Views を用いますので、Viewは作成しません。
index.php に記述しているURLに以下の記述を追加してください。

>|php|
:
$pattern = array(
	//投稿記事の一覧を表示
	"^posts(?:/index)?/?$"=>array("method"=>"read","args"=>array(new Post())),
	//新しい記事の投稿
	"^posts/add/?"=>array("method"=>"create","args"=>array(new Post(),array(Rhaco::url("posts")))),
);
:
||<


* データのバリデーション

rhaco はフォームの入力バリデーションの退屈さを取り除くのに大いに役立ちます。みんな、延々と続くフォームとそのバリデーションルーチンのコーディングを好きではないでしょう。
rhaco を使うと、その作業を簡単、高速に片付けることができます。

バリデーションの機能を活用するためには、project.xml の列モデルに属性を追加します。
既にデータベース設計の時点で記述していますので、もう既にバリデーション機能は実装済みです。

* 参考

- http://book.cakephp.org/ja/view/337/Adding-Posts
- http://book.cakephp.org/ja/view/338/Data-Validation