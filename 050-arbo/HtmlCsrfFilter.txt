* HtmlCsrfFilter

CSRF 対策を行います．
Flow や Flow を継承したクラスにフィルターとして組み込むことで利用が可能です．

** インストール

[http://wikihub.org/rhaco1-doc/050-arbo/01-install:title=インストール]にて，"org.rhaco.generic.filter.HtmlCsrfFilter" を指定してください．

** Views で使う

>|php|
<?php
require_once dirname(__FILE__)."/__init__/.php";
Rhaco::import("generic.Views");
Rhaco::import("model.Profile");
Rhaco::import("database.DbUtil");

$views = new Views(new DbUtil(Profile::connection()),"org.rhaco.generic.filter.HtmlCsrfFilter");
$views->create(new Profile())->write();
||<

** Urls で使う

>|php|
<?php
Rhaco::import("generic.Urls");
Rhaco::import("database.Dbutil");
Rhaco::import("model.Profile");

Urls::parser(array(
	"^$"=>array("class"=>"generic.Views","method"=>"create")
),new DbUtil(Profile::connection(),"org.rhaco.generic.filter.HtmlCsrfFilter"))->write();
||<

と View の場合と同じように渡します．
これによって，全ての画面において，自動的に HtmlCsrfFilter が有効になります．

