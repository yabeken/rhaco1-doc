* SQL クエリの組み立て方

rhaco では，クエリの組み立てに，Criteria ( C ) クラス と Criterion ( Q ) クラス という二つのクラスを組み合わせています．
これらの組み合わせにより，ある程度複雑な条件を含む SQL を発行することができます．

** 一致 / =

>|sql|
select * from profile where (profile.id = 10)
||<

>|php|
$c = new C(Q::eq(Profile::columnId(),10));
$db->select(new Profile(),$c);
||<

** 不一致 / <>

>|php|
//select * from profile where (profile.id <> 10)
$c = new C(Q::neq(Profile::columnId(),10));
$db->select(new Profile(),$c);
||<

** 大なり / >

>|php|
//select * from profile where (profile.id > 10)
$c = new C(Q::gt(Profile::columnId(),10));
$db->select(new Profile(),$c);
||<

** 以上 / >=

>|php|
//select * from profile where (profile.id >= 10)
$c = new C(Q::gte(Profile::columnId(),10));
$db->select(new Profile(),$c);
||<

** 小なり / <

>|php|
//select * from profile where (profile.id < 10)
$c = new C(Q::lt(Profile::columnId(),10));
$db->select(new Profile(),$c);
||<

** 以下 / <=

>|php|
//select * from profile where (profile.id < 10)
$c = new C(Q::lte(Profile::columnId(),10));
$db->select(new Profile(),$c);
||<

** 一致リスト / in

>|php|
//select * from profile where (profile.name in ('hoge','fuga'))
$c = new C(Q::in(Profile::columnName(),array("hoge","fuga")));
$db->select(new Profile(),$c);
||<

** 不一致リスト / not in

>|php|
//select * from profile where (profile.name not in ('hoge','fuga'))
$c = new C(Q::notIn(Profile::columnName(),array("hoge","fuga")));
$db->select(new Profile(),$c);
||<

** 前方一致 / like , ilike

>|php|
//select * from profile where (profile.name like 'hoge%')
$c = new C(Q::like(Profile::columnName(),"hoge","w*"));
$db->select(new Profile(),$c);

//大文字小文字を区別しない場合
//select * from profile where (profile.name ilike 'hoge%')
$c = new C(Q::ilike(Profile::columnName(),"hoge","w*"));
$db->select(new Profile(),$c);
||<

** 前方一致 / startswith, istartswith

>|php|
//select * from profile where (profile.name like 'hoge%')
$c = new C(Q::startswith(Profile::columnName(),"hoge"));
$db->select(new Profile(),$c);

//大文字小文字を区別しない場合
//select * from profile where (profile.name ilike 'hoge%')
$c = new C(Q::istartswith(Profile::columnName(),"hoge"));
$db->select(new Profile(),$c);
||<

** 後方一致 / like, ilike

>|php|
//select * from profile where (profile.name like '%hoge')
$c = new C(Q::like(Profile::columnName(),"hoge","*w"));
$db->select(new Profile(),$c);

//大文字小文字を区別しない場合
//select * from profile where (profile.name ilike '%hoge')
$c = new C(Q::ilike(Profile::columnName(),"hoge","*w"));
$db->select(new Profile(),$c);
||<

** 後方一致 / endswith, iendswith

>|php|
//select * from profile where (profile.name like '%hoge')
$c = new C(Q::endswith(Profile::columnName(),"hoge"));
$db->select(new Profile(),$c);

//大文字小文字を区別しない場合
//select * from profile where (profile.name ilike '%hoge')
$c = new C(Q::iendswith(Profile::columnName(),"hoge"));
$db->select(new Profile(),$c);
||<

** 部分一致 / like, ilike

>|php|
//select * from profile where (profile.name like '%hoge%')
$c = new C(Q::like(Profile::columnName(),"hoge","*"));
$db->select(new Profile(),$c);

//大文字小文字を区別しない場合
//select * from profile where (profile.name ilike '%hoge%')
$c = new C(Q::ilike(Profile::columnName(),"hoge","*"));
$db->select(new Profile(),$c);
||<

** 部分一致 / contains, icontains

>|php|
//select * from profile where (profile.name like '%hoge%')
$c = new C(Q::contains(Profile::columnName(),"hoge"));
$db->select(new Profile(),$c);

//大文字小文字を区別しない場合
//select * from profile where (profile.name ilike '%hoge%')
$c = new C(Q::icontains(Profile::columnName(),"hoge"));
$db->select(new Profile(),$c);
||<

** 前方不一致 / not like , not ilike

>|php|
//select * from profile where (profile.name not like 'hoge%')
$c = new C(Q::notLike(Profile::columnName(),"hoge","w*"));
$db->select(new Profile(),$c);

//大文字小文字を区別しない場合
//select * from profile where (profile.name not ilike 'hoge%')
$c = new C(Q::notiLike(Profile::columnName(),"hoge","w*"));
$db->select(new Profile(),$c);
||<

** 前方不一致 / notStartswith, notiStartswith

>|php|
//select * from profile where (profile.name not like 'hoge%')
$c = new C(Q::notStartswith(Profile::columnName(),"hoge"));
$db->select(new Profile(),$c);

//大文字小文字を区別しない場合
//select * from profile where (profile.name not ilike 'hoge%')
$c = new C(Q::notiStartswith(Profile::columnName(),"hoge"));
$db->select(new Profile(),$c);
||<

** 後方不一致 / not like, not ilike

>|php|
//select * from profile where (profile.name not like '%hoge')
$c = new C(Q::notLike(Profile::columnName(),"hoge","*w"));
$db->select(new Profile(),$c);

//大文字小文字を区別しない場合
//select * from profile where (profile.name not ilike '%hoge')
$c = new C(Q::notiLike(Profile::columnName(),"hoge","*w"));
$db->select(new Profile(),$c);
||<

** 後方不一致 / notEndswith, notiEndswith

>|php|
//select * from profile where (profile.name not like '%hoge')
$c = new C(Q::notEndswith(Profile::columnName(),"hoge"));
$db->select(new Profile(),$c);

//大文字小文字を区別しない場合
//select * from profile where (profile.name not ilike '%hoge')
$c = new C(Q::notiEndswith(Profile::columnName(),"hoge"));
$db->select(new Profile(),$c);
||<

** 部分不一致 / not like, not ilike

>|php|
//select * from profile where profile.name not like '%hoge%'
$c = new C(Q::notLike(Profile::columnName(),"hoge","*"));
$db->select(new Profile(),$c);

//大文字小文字を区別しない場合
//select * from profile where profile.name not ilike '%hoge%'
$c = new C(Q::notiLike(Profile::columnName(),"hoge","*"));
$db->select(new Profile(),$c);
||<

** 部分不一致 / notContains, notiContains

>|php|
//select * from profile where profile.name not like '%hoge%'
$c = new C(Q::notContains(Profile::columnName(),"hoge"));
$db->select(new Profile(),$c);

//大文字小文字を区別しない場合
//select * from profile where profile.name not ilike '%hoge%'
$c = new C(Q::notiContains(Profile::columnName(),"hoge"));
$db->select(new Profile(),$c);
||<

** 並び替え / order, order desc

>|php|
//昇順
//select * from profile order by id
$c = new C(Q::order(Profile::columnId()));
$db->select(new Profile(),$c);

//降順
//select * from profile order by id desc
$c = new C(Q::orderDesc(Profile::columnId()));
$db->select(new Profile(),$c);

//複合
//select * from profile order by name, email desc
$c = new C(Q::order(Profile::columnName()),Q::orderDesc(Profile::columnEmail()));
$db->select(new Profile(),$c);
||<

* 参考

- [http://blog.shigepon.com/snippet36:title=データベースから値を取り出す(select)]
- [http://blog.shigepon.com/snippet37:title=テーブルの操作対象行を絞りこむ(where句をつくる)]
- [http://blog.shigepon.com/snippet38:title=Criteriaの設定にショートカットを使う]
- [http://blog.shigepon.com/snippet39:title=OR検索を行う]
- [http://blog.shigepon.com/snippet41:title=select結果を検索条件に使用する]
- [http://d.hatena.ne.jp/yabeken/20080313/1205393218:title=dbutilで複雑な条件式のSQLを組んでみる]

